{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "appName": {
        "type": "string",
        "defaultValue": "PowerNotifyApp",
        "metadata": {
          "description": "The name of the function app that you wish to create."
        }
      },
      "storageAccountType": {
        "type": "string",
        "defaultValue": "Standard_LRS",
        "allowedValues": [
          "Standard_LRS",
          "Standard_GRS",
          "Standard_RAGRS"
        ],
        "metadata": {
          "description": "Storage Account type"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "vapidSubject": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "VAPID Subject for Web Push."
        }
      },
      "vapidPublicKey": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "VAPID Public Key for Web Push."
        }
      },
      "vapidPrivateKey": {
        "type": "string",
        "defaultValue": "",
        "metadata": {
          "description": "VAPID Private Key for Web Push."
        }
      }
    },
    "variables": {
      "functionAppName": "[parameters('appName')]",
      "functionName": "ForwardNotification",
      "hostingPlanName": "[parameters('appName')]",
      "applicationInsightsName": "[parameters('appName')]",
      "storageAccountName": "[uniquestring(resourceGroup().id)]"
    },
    "resources": [
      {
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('storageAccountName')]",
        "apiVersion": "2019-06-01",
        "location": "[parameters('location')]",
        "kind": "Storage",
        "sku": {
          "name": "[parameters('storageAccountType')]"
        }
      },
      {
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2016-09-01",
        "name": "[variables('hostingPlanName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "Y1",
          "tier": "Dynamic"
        },
        "properties": {
          "name": "[variables('hostingPlanName')]",
          "computeMode": "Dynamic"
        }
      },
      {
        "apiVersion": "2018-02-01",
        "type": "Microsoft.Web/sites",
        "name": "[variables('functionAppName')]",
        "location": "[parameters('location')]",
        "kind": "functionapp",
        "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
          "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
        ],
        "properties": {
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
          "siteConfig": {
            "appSettings": [
              {
                "name": "AzureWebJobsStorage",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
              },
              {
                "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
              },
              {
                "name": "WEBSITE_CONTENTSHARE",
                "value": "[toLower(variables('functionAppName'))]"
              },
              {
                "name": "FUNCTIONS_EXTENSION_VERSION",
                "value": "~2"
              },
              {
                "name": "WEBSITE_NODE_DEFAULT_VERSION",
                "value": "~10"
              },
              {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference(resourceId('microsoft.insights/components', variables('applicationInsightsName')), '2018-05-01-preview').InstrumentationKey]"
              },
              {
                "name": "vapidSubject",
                "value": "[parameters('vapidSubject')]"
              },
              {
                "name": "vapidPublicKey",
                "value": "[parameters('vapidPublicKey')]"
              },
              {
                "name": "vapidPrivateKey",
                "value": "[parameters('vapidPrivateKey')]"
              }
            ]
          }
        }
      },
      {
        "apiVersion": "2018-02-01",
        "name": "[concat(variables('functionAppName'),'/', variables('functionName'))]",
        "type": "Microsoft.Web/sites/functions",
        "dependsOn": [
          "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
        ],
        "properties": {
          "config": {
            "bindings": [
              {
                "name": "req",
                "webHookType": "genericJson",
                "direction": "in",
                "type": "httpTrigger"
              },
              {
                "name": "res",
                "direction": "out",
                "type": "http"
              }
            ]
          },
          "files": {
            "index.js": "\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst webPush = require(\"web-push\");\r\nconst httpTrigger = function (context, req) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        context.log('HTTP trigger function processed a request.');\r\n        try {\r\n            // Get and validate web-push config\r\n            const { vapidSubject, vapidPublicKey, vapidPrivateKey } = process.env;\r\n            if (!vapidPublicKey || !vapidPrivateKey)\r\n                throw new Error(\"You must set the VAPID_PUBLIC_KEY and VAPID_PRIVATE_KEY environment variables.\");\r\n            // Web Push setup\r\n            webPush.setVapidDetails(vapidSubject, vapidPublicKey, vapidPrivateKey);\r\n            // Get and validate request body\r\n            const data = req.body;\r\n            if (!data || !data.subscription || !data.payload)\r\n                throw new Error(\"The body must contain a subscription and payload properties.\");\r\n            // Send notification\r\n            const result = yield webPush.sendNotification(data.subscription, JSON.stringify(data.payload));\r\n            context.res = {\r\n                status: result.statusCode,\r\n                headers: result.headers,\r\n                body: result.body,\r\n            };\r\n        }\r\n        catch (error) {\r\n            context.log.error(error);\r\n            context.res = {\r\n                status: 500,\r\n                body: error.message\r\n            };\r\n        }\r\n    });\r\n};\r\nexports.default = httpTrigger;"
          }
        }
      },
      {
        "apiVersion": "2018-05-01-preview",
        "name": "[variables('applicationInsightsName')]",
        "type": "Microsoft.Insights/components",
        "location": "[parameters('location')]",
        "tags": {
          "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('applicationInsightsName')))]": "Resource"
        },
        "properties": {
          "ApplicationId": "[variables('applicationInsightsName')]",
          "Request_Source": "IbizaWebAppExtensionCreate"
        }
      }
    ]
  }